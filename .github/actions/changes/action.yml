name: "prepare"
description: "Prepare workflow"

inputs:
  type:
    description: "Type of workflow"
    default: "one of: `gradio`, `python-client`, `js`, `js-client`, `functional`"
  token:
    description: "Github token"
    required: true
outputs:
  should_run:
    description: "Whether to run the workflow"
    value: ${{ steps.should_run.outputs.should_run }}
  pr_number:
    description: "PR number"
    value: ${{ steps.pr.outputs.pr_number }}
  sha:
    description: "SHA of the HEAD commit of the PR"
    value: ${{ steps.pr.outputs.sha }}
  source_repo:
    description: "Source repo"
    value: ${{ steps.pr.outputs.source_repo }}
  source_branch:
    description: "Source branch"
    value: ${{ steps.pr.outputs.source_branch }}
  merge_sha:
    description: "SHA of the merged result preview branch"
    value: ${{ steps.merge.outputs.merge_sha }}
  mergeable:
    description: "Whether the PR is mergeable"
    value: ${{ steps.merge.outputs.mergeable }}

runs:
  using: "composite"
  steps:
    - name: "Get PR number"
      id: pr
      uses: "gradio-app/github/actions/find-pr@main"
      with:
        github_token: ${{ inputs.token }}
    - uses: actions/checkout@v3
      with:
        repository: ${{ steps.pr.outputs.source_repo }}
        ref: ${{ steps.pr.outputs.source_branch }}
        fetch-depth: 0
        token: ${{ inputs.token }}
    - run: echo "FOUND_PR? ${{ steps.pr.outputs.found_pr }}"
      shell: bash
    - run: echo "SOURCE_BRANCH? ${{ steps.pr.outputs.source_branch }}"
      shell: bash
    - run: echo "HEAD_SHA? ${{ steps.pr.outputs.sha }}"
      shell: bash
    - run: echo "PR_NUMBER? ${{ steps.pr.outputs.pr_number }}"
      shell: bash
    - run: echo "$SOURCE_REPO? {{ steps.pr.outputs.source_repo }}"
      shell: bash
    - run: echo "MERGE_SHA? ${{ steps.pr.outputs.merge_sha }}"
      shell: bash
    - run: echo "MERGEABLE? ${{ steps.pr.outputs.mergeable }}"
      shell: bash

    - uses: dorny/paths-filter@v2
      id: changes
      with:
        ref: ${{ steps.pr.outputs.source_branch }}
        filters: |
          gradio:
            - 'client/python/**'
            - 'gradio/**'
            - 'requirements.txt'
            - '.github/**'
            - 'scripts/**'
            - 'test/**'
          js:
            - 'js/**'
            - 'client/js/**'
            - '.github/**'
            - 'package.json'
            - 'pnpm-lock.yaml'
            - 'tsconfig.json'
            - '.config/**'
          functional:
            - '.github/**'
            - 'client/**'
            - 'demo/**'
            - 'gradio/**'
            - 'js/**'
            - 'scripts/**'
            - 'globals.d.ts'
            - 'package.json'
            - 'pnpm-lock.yaml'
            - 'pyproject.toml'
            - 'requirements.txt'
            - '.config/**'
          visual:
            - '.github/workflows/deploy-chromatic.yml'
            - 'js!(/_website)/**'
            - 'package.json'
          website:
            - 'js/_website/**'
            - 'package.json'
            - 'pnpm-lock.yaml'
            - 'guides/**'
            - 'README.md'
            - 'CHANGELOG.md'
            - 'gradio/**'
            - 'client/**'
            - 'demo/**'
            - '.github/deplooy-website.yml'

    - name: set env (gradio)
      if: ${{ inputs.type == 'gradio' }}
      shell: bash
      run: echo "SHOULD_RUN=${{ steps.changes.outputs.gradio == 'true' }}" >> $GITHUB_ENV
    - name: set env (js)
      if: ${{ inputs.type == 'js' }}
      shell: bash
      run: echo "SHOULD_RUN=${{ steps.changes.outputs.js == 'true' }}" >> $GITHUB_ENV
    - name: set env (functional)
      if: ${{ inputs.type == 'functional' }}
      shell: bash
      run: echo "SHOULD_RUN=${{ steps.changes.outputs.functional == 'true' }}" >> $GITHUB_ENV
    - name: set env (visual)
      if: ${{ inputs.type == 'visual' }}
      shell: bash
      run: echo "SHOULD_RUN=${{ steps.changes.outputs.visual == 'true' }}" >> $GITHUB_ENV
    - name: set end (all)
      if: ${{ inputs.type == 'all' }}
      shell: bash
      run: echo "SHOULD_RUN=true" >> $GITHUB_ENV
    - name: set env (website)
      if: ${{ inputs.type == 'website' }}
      shell: bash
      run: echo "SHOULD_RUN=${{ steps.changes.outputs.website == 'true' }}" >> $GITHUB_ENV
    - if: ${{ steps.pr.outputs.mergeable == 'false' }}
      run: echo "SHOULD_RUN=false" >> $GITHUB_ENV
      shell: bash
    - name: set output
      id: should_run
      shell: bash
      run: echo "should_run=${{ env.SHOULD_RUN }}" >> $GITHUB_OUTPUT
    - uses: "gradio-app/github/actions/commit-statusr@main"
      with:
        token: ${{ inputs.token }}
        pr: ${{ steps.pr.outputs.pr_number }}
        sha: ${{ steps.pr.outputs.sha }}
        name: ${{ inputs.name }}
        changes: ${{ steps.changes.outputs.changes }}
        type: ${{ inputs.type }}
        init: true
        mergeable: ${{ steps.pr.outputs.source_branch == 'main' || steps.pr.outputs.mergeable }}
